{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEe,SAASQ,IAAT,CAAeC,KAAf,EAAuB;EACrC,MAAM;IAAEC,UAAF;IAAcC;EAAd,IAAgCF,KAAtC;EACA,MAAM,CAAEG,UAAF,EAAcC,aAAd,IAAgCP,4DAAQ,CAAC,EAAD,CAA9C,CAFqC,CAIrC;EACA;EACA;EACA;;EACA,IAAK,OAAOQ,MAAM,CAACC,aAAd,KAAgC,WAArC,EAAmD;IAClDD,MAAM,CAACC,aAAP,GAAuB;MACtBH,UAAU,EAAE,EADU;MAEtBI,oBAAoB,EAAE,EAFA,CAEG;;IAFH,CAAvB;EAIA,CAboC,CAerC;EACA;;;EACA,MAAMC,iBAAiB,GAAG,MAAM,IAAIC,OAAJ,CAAeC,OAAF,IAAe;IAC3DC,EAAE,CAACC,QAAH,CAAY;MACXC,IAAI,EAAE;IADK,CAAZ,EAEGC,IAFH,CAES,UAAUC,YAAV,EAAyB;MACjC,IAAIC,cAAc,GAAG,EAArB;;MAEA,KAAM,MAAMC,GAAZ,IAAmBF,YAAnB,EAAkC;QACjCC,cAAc,CAACE,IAAf,CAAoB;UACnBC,KAAK,EAAG,GAAGJ,YAAY,CAAEE,GAAF,CAAS,KAAKA,GAAK,GADvB;UAEnBG,KAAK,EAAEC,QAAQ,CAAEJ,GAAF;QAFI,CAApB;MAIA;;MAEDP,OAAO,CAAEM,cAAF,CAAP;IACA,CAbD;EAcA,CAf+B,CAAhC,CAjBqC,CAkCrC;;;EACA,MAAMM,YAAY,GAAKC,WAAF,IAAmB;IACvC,MAAMC,SAAS,GAAGrB,UAAU,CAACsB,IAAX,CAAmBD,SAAF,IAAiB;MACnD,OAAOA,SAAS,CAACJ,KAAV,KAAoBG,WAA3B;IACA,CAFiB,CAAlB;IAIA,OAAO,OAAOC,SAAP,KAAqB,WAArB,GAAmCA,SAAnC,GAA+C,KAAtD;EACA,CAND,CAnCqC,CA2CrC;;;EACA,MAAME,iBAAiB,GAAKH,WAAF,IAAmB;IAC5C,MAAMC,SAAS,GAAGF,YAAY,CAAEC,WAAF,CAA9B;IAEA,OAAOC,SAAS,KAAK,KAAd,GAAsBA,SAAS,CAACL,KAAhC,GAAuC,EAA9C;EACA,CAJD,CA5CqC,CAkDrC;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,MAAMQ,IAAI,GAAG,MAAM;IAClB,IAAKtB,MAAM,CAACC,aAAP,CAAqBC,oBAArB,KAA8C,QAAnD,EAA8D;MAC7DH,aAAa,CAAEC,MAAM,CAACC,aAAP,CAAqBH,UAAvB,CAAb;IACA,CAFD,MAEO,IAAKE,MAAM,CAACC,aAAP,CAAqBC,oBAArB,KAA8C,SAAnD,EAA+D;MACrE,MAAMqB,qBAAqB,GAAGC,WAAW,CAAE,YAAW;QACrD,IAAKxB,MAAM,CAACC,aAAP,CAAqBC,oBAArB,KAA8C,QAAnD,EAA8D;UAC7DuB,aAAa,CAAEF,qBAAF,CAAb;UACAxB,aAAa,CAAEC,MAAM,CAACC,aAAP,CAAqBH,UAAvB,CAAb;QACA;MACD,CALwC,EAKtC,GALsC,CAAzC;IAMA,CAPM,MAOA;MACNE,MAAM,CAACC,aAAP,CAAqBC,oBAArB,GAA4C,SAA5C;MAEAC,iBAAiB,GAAGM,IAApB,CAA4BE,cAAF,IAAsB;QAC/CX,MAAM,CAACC,aAAP,CAAqBC,oBAArB,GAA4C,QAA5C;QACAF,MAAM,CAACC,aAAP,CAAqBH,UAArB,GAAkCa,cAAlC;QAEAZ,aAAa,CAAEY,cAAF,CAAb;MACA,CALD;IAMA;EACD,CApBD;;EAsBApB,6DAAS,CAAE,MAAM;IAChB+B,IAAI;EACJ,CAFQ,EAEN,EAFM,CAAT;EAIA,OACC,yEAAUnC,sEAAa,EAAvB,EACC,kEAAC,8DAAD;IAAa,KAAK,EAAC,gBAAnB;IAAoC,IAAI,EAAGM,qDAAiBA;EAA5D,GAEEO,MAAM,CAACC,aAAP,CAAqBC,oBAArB,KAA8C,QAA9C,GACC;IAAK,SAAS,EAAC;EAAf,QAA+DhB,mDAAE,CAAE,gCAAF,EAAoC,gBAApC,CAAjE,MADD,GAGCc,MAAM,CAACC,aAAP,CAAqBH,UAArB,CAAgC4B,MAAhC,KAA2C,CAA3C,GACC;IAAK,SAAS,EAAC;EAAf,QAA+DxC,mDAAE,CAAE,6CAAF,EAAiD,gBAAjD,CAAjE,MADD,GAGC+B,YAAY,CAAErB,UAAU,CAACsB,WAAb,CAAZ,KAA2C,KAA3C,GACC;IAAK,SAAS,EAAC;EAAf,QAA+DhC,mDAAE,CAAE,6CAAF,EAAiD,gBAAjD,CAAjE,MADD,GAGC;IAAK,SAAS,EAAC;EAAf,GACC;IAAG,SAAS,EAAC;EAAb,QAAoDmC,iBAAiB,CAAEzB,UAAU,CAACsB,WAAb,CAArE,MADD,EAEC;IAAG,SAAS,EAAC,6BAAb;IAA2C,IAAI,EAAG,GAAGS,oBAAoB,CAACC,SAAW,2BAA2BhC,UAAU,CAACsB,WAAa,cAAxI;IAAuJ,MAAM,EAAC;EAA9J,QAA0KhC,mDAAE,CAAE,gBAAF,EAAoB,gBAApB,CAA5K,MAFD,CAXL,CADD,EAsBC,kEAAC,sEAAD,QACC,kEAAC,gEAAD;IACC,SAAS,EAAC,+BADX;IAEC,KAAK,EAAGA,mDAAE,CAAE,mCAAF,EAAuC,gBAAvC,CAFX;IAGC,OAAO,EAAG,CAAE;MAAE4B,KAAK,EAAE5B,mDAAE,CAAE,MAAF,EAAU,gBAAV,CAAX;MAAwC6B,KAAK,EAAE,CAAC;IAAhD,CAAF,EAAuD,GAAGjB,UAA1D,CAHX;IAIC,KAAK,EAAGF,UAAU,CAACsB,WAJpB;IAKC,QAAQ,EAAKW,cAAF,IAAsBhC,aAAa,CAAE;MAAEqB,WAAW,EAAEF,QAAQ,CAAEa,cAAF;IAAvB,CAAF;EAL/C,EADD,EASE7B,MAAM,CAACC,aAAP,CAAqBH,UAArB,CAAgC4B,MAAhC,KAA2C,CAA3C,IACA;IACC,SAAS,EAAC,iCADX;IAEC,uBAAuB,EAAE;MACxBI,MAAM,EAAEC,OAAO,CAAE7C,mDAAE,CAAE,yLAAF,EAA6L,gBAA7L,CAAJ,EAAsN,GAAGyC,oBAAoB,CAACC,SAAW,sBAAzP;IADS;EAF1B,EAVF,CAtBD,CADD;AA2CA;;;;;;;;;;;;;;;;;ACvIM,MAAMnC,iBAAiB,GAAG;EAAK,OAAO,EAAC,WAAb;EAAyB,MAAM,EAAC,IAAhC;EAAqC,KAAK,EAAC;AAA3C,GAAgD;EAAM,MAAM,EAAC,MAAb;EAAoB,gBAAa,GAAjC;EAAqC,IAAI,EAAC,MAA1C;EAAiD,CAAC,EAAC;AAAnD,EAAhD,CAA1B;;;;;;;;;;;;;;;;;;;ACAP;AAEe,SAASuC,IAAT,CAAerC,KAAf,EAAuB;EACrC,MAAM;IAAEC;EAAF,IAAiBD,KAAvB;EAEA,OACC,yEAAUR,uEAAA,EAAV,EACGS,UAAU,CAACsB,WAAX,KAA2B,CAAC,CAA5B,IAAkC,uBAAuBtB,UAAU,CAACsB,WAAa,IADpF,CADD;AAKA;;;;;;;;;;;ACVD;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAEAe,oEAAiB,CAAEC,wCAAF,EAAY;EAC5BC,IAAI,EAAE1C,qDADsB;EAE5BC,IAF4B;EAG5BsC,IAAIA,+CAAAA;AAHwB,CAAZ,CAAjB,C","sources":["webpack://grid-accordion/./src/edit.js","webpack://grid-accordion/./src/icons.js","webpack://grid-accordion/./src/save.js","webpack://grid-accordion/./src/editor.scss","webpack://grid-accordion/external window [\"wp\",\"blockEditor\"]","webpack://grid-accordion/external window [\"wp\",\"blocks\"]","webpack://grid-accordion/external window [\"wp\",\"components\"]","webpack://grid-accordion/external window [\"wp\",\"element\"]","webpack://grid-accordion/external window [\"wp\",\"i18n\"]","webpack://grid-accordion/webpack/bootstrap","webpack://grid-accordion/webpack/runtime/compat get default export","webpack://grid-accordion/webpack/runtime/define property getters","webpack://grid-accordion/webpack/runtime/hasOwnProperty shorthand","webpack://grid-accordion/webpack/runtime/make namespace object","webpack://grid-accordion/./src/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { InspectorControls } from '@wordpress/blockEditor';\nimport { SelectControl, Placeholder } from '@wordpress/components';\nimport { useEffect, useState } from '@wordpress/element';\nimport { gridAccordionIcon } from './icons';\n\nimport './editor.scss';\n\nexport default function edit( props ) {\n\tconst { attributes, setAttributes } = props;\n\tconst [ accordions, setAccordions ] = useState([]);\n\n\t// Create a global object to store the accordion data, so\n\t// that it needs to be fetched only once, when the first\n\t// block is added. Additional blocks will use the accordion\n\t// data stored in the global object.\n\tif ( typeof window.gridAccordion === 'undefined' ) {\n\t\twindow.gridAccordion = {\n\t\t\taccordions: [],\n\t\t\taccordionsDataStatus: '' // can be '', 'loading' or 'loaded'\n\t\t};\n\t}\n\n\t// Load the accordion data and store the accordion name and id,\n\t// as 'label' and 'value' to be used in the SelectControl.\n\tconst getAccordionsData = () => new Promise( ( resolve ) => {\n\t\twp.apiFetch({\n\t\t\tpath: 'grid-accordion/v1/accordions'\n\t\t}).then( function( responseData ) {\n\t\t\tlet accordionsData = [];\n\t\t\t\n\t\t\tfor ( const key in responseData ) {\n\t\t\t\taccordionsData.push({\n\t\t\t\t\tlabel: `${ responseData[ key ] } (${ key })`,\n\t\t\t\t\tvalue: parseInt( key )\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tresolve( accordionsData );\n\t\t});\n\t});\n\n\t// Get a accordion by its id.\n\tconst getAccordion = ( accordionId ) => {\n\t\tconst accordion = accordions.find( ( accordion ) => {\n\t\t\treturn accordion.value === accordionId;\n\t\t});\n\n\t\treturn typeof accordion !== 'undefined' ? accordion : false;\n\t};\n\n\t// Get the accordion's label by its id.\n\tconst getAccordionLabel = ( accordionId ) => {\n\t\tconst accordion = getAccordion( accordionId );\n\n\t\treturn accordion !== false ? accordion.label: '';\n\t};\n\n\t// Initialize the component by setting the 'accordions' property\n\t// which will trigger the rendering of the component.\n\t//\n\t// If the accordions data is already globally available, set the 'accordions'\n\t// immediately. If the accordions data is currently loading, wait for it\n\t// to load and then set the 'accordions'. If it's not currently loading,\n\t// start the loading process.\n\tconst init = () => {\n\t\tif ( window.gridAccordion.accordionsDataStatus === 'loaded' ) {\n\t\t\tsetAccordions( window.gridAccordion.accordions );\n\t\t} else if ( window.gridAccordion.accordionsDataStatus === 'loading' ) {\n\t\t\tconst checkApiFetchInterval = setInterval( function() {\n\t\t\t\tif ( window.gridAccordion.accordionsDataStatus === 'loaded' ) {\n\t\t\t\t\tclearInterval( checkApiFetchInterval );\n\t\t\t\t\tsetAccordions( window.gridAccordion.accordions );\n\t\t\t\t}\n\t\t\t}, 100 );\n\t\t} else {\n\t\t\twindow.gridAccordion.accordionsDataStatus = 'loading';\n\n\t\t\tgetAccordionsData().then( ( accordionsData ) => {\n\t\t\t\twindow.gridAccordion.accordionsDataStatus = 'loaded';\n\t\t\t\twindow.gridAccordion.accordions = accordionsData;\n\n\t\t\t\tsetAccordions( accordionsData );\n\t\t\t});\n\t\t}\n\t}\n\n\tuseEffect( () => {\n\t\tinit();\n\t}, [] );\n\n\treturn (\n\t\t<div { ...useBlockProps() }>\n\t\t\t<Placeholder label='Grid Accordion' icon={ gridAccordionIcon }>\n\t\t\t\t{\n\t\t\t\t\twindow.gridAccordion.accordionsDataStatus !== 'loaded' ?\n\t\t\t\t\t\t<div className='sp-gutenberg-accordion-placeholder-content'> { __( 'Loading Grid Accordion data...', 'grid-accordion' ) } </div>\n\t\t\t\t\t: (\n\t\t\t\t\t\twindow.gridAccordion.accordions.length === 0 ?\n\t\t\t\t\t\t\t<div className='sp-gutenberg-accordion-placeholder-content'> { __( 'You don\\'t have any created accordions yet.', 'grid-accordion' ) } </div>\n\t\t\t\t\t\t: (\n\t\t\t\t\t\t\tgetAccordion( attributes.accordionId ) === false ?\n\t\t\t\t\t\t\t\t<div className='sp-gutenberg-accordion-placeholder-content'> { __( 'Select a accordion from the Block settings.', 'grid-accordion' ) } </div>\n\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t<div className='sp-gutenberg-accordion-placeholder-content'>\n\t\t\t\t\t\t\t\t\t<p className='sp-gutenberg-accordion-identifier'> { getAccordionLabel( attributes.accordionId ) } </p>\n\t\t\t\t\t\t\t\t\t<a className='sp-gutenberg-edit-accordion' href={`${ sp_gutenberg_js_vars.admin_url }?page=grid-accordion&id=${ attributes.accordionId }&action=edit`} target='_blank'> { __( 'Edit Accordion', 'grid-accordion' ) } </a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Placeholder>\n\n\t\t\t<InspectorControls>\n\t\t\t\t<SelectControl\n\t\t\t\t\tclassName='sp-gutenberg-select-accordion'\n\t\t\t\t\tlabel={ __( 'Select a accordion from the list:', 'grid-accordion' ) }\n\t\t\t\t\toptions={ [ { label: __( 'None', 'grid-accordion'), value: -1 }, ...accordions ] }\n\t\t\t\t\tvalue={ attributes.accordionId }\n\t\t\t\t\tonChange={ ( newAccordionId ) => setAttributes( { accordionId: parseInt( newAccordionId ) } ) }\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\twindow.gridAccordion.accordions.length === 0 &&\n\t\t\t\t\t<p \n\t\t\t\t\t\tclassName='sp-gutenberg-no-accordions-text'\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: sprintf( __( 'You don\\'t have any created accordions yet. You can create and manage accordions in the <a href=\"%s\" target=\"_blank\">dedicated area</a>, and then use the block to load the accordions.', 'grid-accordion' ), `${ sp_gutenberg_js_vars.admin_url }?page=grid-accordion` )\n\t\t\t\t\t\t}}>\n\t\t\t\t\t</p>\n\t\t\t\t}\n\t\t\t</InspectorControls>\n\t\t</div>\n\t);\n}\n","export const gridAccordionIcon = <svg viewBox=\"0 0 24 24\" height=\"24\" width=\"24\"><path stroke=\"#000\" stroke-width=\"1\" fill=\"none\" d=\"M1 20 L1 9 L16 9 L16 20 L1 20 Z M4 9 L4 6 L19 6 L19 17 L16 17 M7 6 L7 3 L22 3 L22 14 L19 14\"/></svg>","import { useBlockProps } from '@wordpress/block-editor';\n\nexport default function save( props ) {\n\tconst { attributes } = props;\n\n\treturn (\n\t\t<div { ...useBlockProps.save() }>\n\t\t\t{ attributes.accordionId !== -1 && `[grid_accordion id=\"${ attributes.accordionId }\"]` }\n\t\t</div>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { gridAccordionIcon } from './icons';\nimport edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nregisterBlockType( metadata, {\n\ticon: gridAccordionIcon,\n\tedit,\n\tsave,\n});\n"],"names":["__","useBlockProps","InspectorControls","SelectControl","Placeholder","useEffect","useState","gridAccordionIcon","edit","props","attributes","setAttributes","accordions","setAccordions","window","gridAccordion","accordionsDataStatus","getAccordionsData","Promise","resolve","wp","apiFetch","path","then","responseData","accordionsData","key","push","label","value","parseInt","getAccordion","accordionId","accordion","find","getAccordionLabel","init","checkApiFetchInterval","setInterval","clearInterval","length","sp_gutenberg_js_vars","admin_url","newAccordionId","__html","sprintf","save","registerBlockType","metadata","icon"],"sourceRoot":""}